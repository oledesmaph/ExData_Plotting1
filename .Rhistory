push
x <- 1:4
x
lapply(x, runif)
lapply(x, runif)
lapply(x, runif 1:10)
lapply(x, runif(10))
x
x <- list(a = matrix(1:4, 2,2), b = matrix(1:6, 3, 2))
x
lapply (x, function(y), y[,1])
lapply (x, function(y), y[,1]))
lapply (x, function(y) y[,1])
x <- matrix(rnorm(1:100, 10,10))
x
x <- matrix(rnorm(1:100), 10,10))
x <- matrix(rnorm(1:100), 10,10)
x
apply(x, 1, mean)
apply(x, 2, mean)
x <- matrix(1:16, 4, 4)
x
aplly(x,1,sum)
apply(x,1,sum)
rowSums(x)
colSums(x)
f <- gl(3,10
)
f
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
tapply(x,f,mean)
tapply(x,f,mean, simplify = false)
tapply(x,f,mean, simplify = FALSE)
library(datasets)
data(iris)
?iris
iris
mean(a$virginica$Sepal.Length)
iris
iris[1,]
iris[1,] == "virginica"
iris[,4] == "virginica"
iris[,5] == "virginica"
colMeans(iris[,5] == "virginica")
x <- subset(iris, species == "virginica")
x <- subset(iris, Species == "virginica")
x
colMeans(x)
apply(x,2,mean)
mean(x,Sepal.Width)
x
colMeans(x)
apply(x,2,mean)
x[1,]
x[,2]
mean(x[,2])
mean(x(Sepal.Length))
mean(x[,3])
mean(x[,1])
apply(iris[, 1:4], 2, mean)
iris[1:4]
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
data(iris)
with(iris, tapply(Sepal.Length, Species, mean))
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
df <- read.csv("getdata-data-ss06hid.csv")
ans <- strsplit(names(df), "wgtp")[123]
ans
getwd)_
getwd()
df <- read.csv("getdata-data-ss06hid.csv")
ans <- strsplit(names(df), "wgtp")[123]
ans
gdprankings <- read.csv('getdata-data-GDP.csv', skip=4, stringsAsFactors = FALSE)
# Remove empty cols and ammend colnames
gdprankings[,3] <- gdprankings[,6] <- gdprankings[,7] <- gdprankings[,8] <- gdprankings[,9] <- gdprankings[,10]  <- NULL
colnames(gdprankings) <- c("abbreviation", "ranking", "economy", "gdp")
gdprankings <- gdprankings[gdprankings$abbreviation != "", ] # Remove entries w/ no abbreviation
gdprankings <- gdprankings[1:190,] ## Remove regions - just keep countries
gdprankings[,2] <- as.numeric(gdprankings[,2])
gdprankings[,4] <- gsub(",", "", gdprankings[,4]) # Remove "," to allow coercion
gdprankings[,4] <- as.integer(gdprankings[,4])
ans <- mean(gdprankings[,4])
ans
countryNames <- gdprankings$economy
countryNamesBeginWithUnited <- countryNames[grep("^United",countryNames)]
ans <- length(countryNamesBeginWithUnited)
ans
edstats <- read.csv('getdata-data-EDSTATS_Country.csv', stringsAsFactors = FALSE)
mergeddata <- merge(gdprankings, edstats, by.x = "abbreviation", by.y = "CountryCode", all = FALSE)
## Fiscal year end data is included in the Special.Notes column
specialnotes <- mergeddata$Special.Notes
## Special.Notes that contain Jun/jun
specialnoteswithjune <- specialnotes[(grep("[jJ]une", specialnotes))]
## Filter to notes that contain fiscal year end
specialnoteswithjune[(grep("[fF]iscal", specialnoteswithjune))]
ans <- nrow(specialnoteswithjune[(grep("[fF]iscal", specialnoteswithjune))])
ans
edstats <- read.csv('getdata-data-EDSTATS_Country.csv', stringsAsFactors = FALSE)
mergeddata <- merge(gdprankings, edstats, by.x = "abbreviation", by.y = "CountryCode", all = FALSE)
## Fiscal year end data is included in the Special.Notes column
specialnotes <- mergeddata$Special.Notes
## Special.Notes that contain Jun/jun
specialnoteswithjune <- specialnotes[(grep("[jJ]une", specialnotes))]
## Filter to notes that contain fiscal year end
specialnoteswithjune[(grep("[fF]iscal", specialnoteswithjune))]
ans <- nrow(specialnoteswithjune[(grep("[fF]iscal", specialnoteswithjune))])
ans
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
formatdates <- format(sampleTimes, "%a %y")
values12 <- formatdates[grep("12", formatdates)] ## Subset on dates in 2012
valuesMonday12 <- values12[grep("Mon", values12)] ## Subset on Mondays
ans <- c(length(values12), length(valuesMonday12))
ans
# Basic idea to read the file modified from Peter H's post
# on the discussion forums
# https://class.coursera.org/exdata-002/forum/thread?thread_id=19
# Thanks Peter
# data file
f <- gzfile("household_power_consumption.txt","rt");
# read lines that match on dates
nolines <- 100
greped<-c()
repeat {
lines=readLines(f,n=nolines)       #read lines
idx <- grep("^[12]/2/2007", lines) #find those that match
greped<-c(greped, lines[idx])      #add the found lines
if(nolines!=length(lines)) {
break #are we at the end of the file?
}
}
close(f)
# now we create a text connection and load data
tc<-textConnection(greped,"rt")
df<-read.table(tc,sep=";",col.names = colnames(read.table(
"household_power_consumption.txt.gz",
nrow = 1, header = TRUE, sep=";")), na.strings = "?")
# convert Date and Time variables to Date/Time classes
df$Date <- as.Date(df$Date , "%d/%m/%Y")
df$Time <- paste(df$Date, df$Time, sep=" ")
df$Time <- strptime(df$Time, "%Y-%m-%d %H:%M:%S")
# output to png the Global Active Power histogram plot
# I am using default white background for the default named images even though it does not match
# the exact images provided.
# Also I am using size 480 x 480 as specified in the rubric. The images provided are 504 x 504
# So in that sense it is not an exact match also.
# I will create another set of images which have a transparent background and
# and the 504 x 504 size and append a -T to the name. These are the ones which match
# exactly
png("plot1.png", width = 480, height = 480)
hist(df$Global_active_power, main = "Global Active power", col = "red", xlab = "Global Active Power (kilowatts)", )
dev.off
# Transparency Code commented out
#png("figure/plot1-T.png", width = 504, height = 504, bg = "transparent")
#hist(df$Global_active_power, main = "Global Active power", col = "red", xlab = "Global Active Power (kilowatts)", )
#dev.off
# Basic idea to read the file modified from Peter H's post
# on the discussion forums
# https://class.coursera.org/exdata-002/forum/thread?thread_id=19
# Thanks Peter
# data file
f <- gzfile("household_power_consumption.txt","rt");
# read lines that match on dates
nolines <- 100
greped<-c()
repeat {
lines=readLines(f,n=nolines)       #read lines
idx <- grep("^[12]/2/2007", lines) #find those that match
greped<-c(greped, lines[idx])      #add the found lines
if(nolines!=length(lines)) {
break #are we at the end of the file?
}
}
close(f)
# now we create a text connection and load data
tc<-textConnection(greped,"rt")
df<-read.table(tc,sep=";",col.names = colnames(read.table(
"household_power_consumption.txt.gz",
nrow = 1, header = TRUE, sep=";")), na.strings = "?")
# convert Date and Time variables to Date/Time classes
df$Date <- as.Date(df$Date , "%d/%m/%Y")
df$Time <- paste(df$Date, df$Time, sep=" ")
df$Time <- strptime(df$Time, "%Y-%m-%d %H:%M:%S")
# output to png the Global Active Power histogram plot
# I am using default white background for the default named images even though it does not match
# the exact images provided.
# Also I am using size 480 x 480 as specified in the rubric. The images provided are 504 x 504
# So in that sense it is not an exact match also.
# I will create another set of images which have a transparent background and
# and the 504 x 504 size and append a -T to the name. These are the ones which match
# exactly
png("plot1.png", width = 480, height = 480)
hist(df$Global_active_power, main = "Global Active power", col = "red", xlab = "Global Active Power (kilowatts)", )
dev.off
# Transparency Code commented out
#png("figure/plot1-T.png", width = 504, height = 504, bg = "transparent")
#hist(df$Global_active_power, main = "Global Active power", col = "red", xlab = "Global Active Power (kilowatts)", )
#dev.off
install.packages("graphics")
install.packages("graphics")
install.packages("grDevices")
install.packages("grDevices")
# Exploratory Data Analysis
# Project 1
# Clean upworkspace
rm(list=ls())
# Load data
path <- "~/Downloads/household_power_consumption.txt"
myData <- read.table(path,header=TRUE,sep=";",colClasses="character")
# Convert to Date/Time clsases
myData[,1] <- as.Date(myData$Date,"%d/%m/%Y")
myData[,2] <- as.Date(myData$Time,"%H/%M/%S")
# Create a subset of the data between 2007-02-01 and 2007-02-02
subData <- subset(myData, myData$Date %in% as.Date(c("2007-02-01","2007-02-02")))
# Cast the rest of the columns as numeric
subData[,3] <- as.numeric(subData[,3])
subData[,4] <- as.numeric(subData[,4])
subData[,5] <- as.numeric(subData[,5])
subData[,6] <- as.numeric(subData[,6])
subData[,7] <- as.numeric(subData[,7])
subData[,8] <- as.numeric(subData[,8])
subData[,9] <- as.numeric(subData[,9])
# Create Plot 1
hist(subData[,3], col = "Red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
# Copy to PNG file for submission
dev.copy(png,file="plot1.png")
# Close device
dev.off()
setwd("C:/Users/Oliver/Coursera/ExData_Plotting1")
# Exploratory Data Analysis
# Project 1
# Clean upworkspace
rm(list=ls())
# Load data
path <- "~/household_power_consumption.txt"
myData <- read.table(path,header=TRUE,sep=";",colClasses="character")
# Convert to Date/Time clsases
myData[,1] <- as.Date(myData$Date,"%d/%m/%Y")
myData[,2] <- as.Date(myData$Time,"%H/%M/%S")
# Create a subset of the data between 2007-02-01 and 2007-02-02
subData <- subset(myData, myData$Date %in% as.Date(c("2007-02-01","2007-02-02")))
# Cast the rest of the columns as numeric
subData[,3] <- as.numeric(subData[,3])
subData[,4] <- as.numeric(subData[,4])
subData[,5] <- as.numeric(subData[,5])
subData[,6] <- as.numeric(subData[,6])
subData[,7] <- as.numeric(subData[,7])
subData[,8] <- as.numeric(subData[,8])
subData[,9] <- as.numeric(subData[,9])
# Create Plot 1
hist(subData[,3], col = "Red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
# Copy to PNG file for submission
dev.copy(png,file="plot1.png")
# Close device
dev.off()
# Exploratory Data Analysis
# Project 1
# Clean upworkspace
rm(list=ls())
# Load data
path <- "/household_power_consumption.txt"
myData <- read.table(path,header=TRUE,sep=";",colClasses="character")
# Convert to Date/Time clsases
myData[,1] <- as.Date(myData$Date,"%d/%m/%Y")
myData[,2] <- as.Date(myData$Time,"%H/%M/%S")
# Create a subset of the data between 2007-02-01 and 2007-02-02
subData <- subset(myData, myData$Date %in% as.Date(c("2007-02-01","2007-02-02")))
# Cast the rest of the columns as numeric
subData[,3] <- as.numeric(subData[,3])
subData[,4] <- as.numeric(subData[,4])
subData[,5] <- as.numeric(subData[,5])
subData[,6] <- as.numeric(subData[,6])
subData[,7] <- as.numeric(subData[,7])
subData[,8] <- as.numeric(subData[,8])
subData[,9] <- as.numeric(subData[,9])
# Create Plot 1
hist(subData[,3], col = "Red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
# Copy to PNG file for submission
dev.copy(png,file="plot1.png")
# Close device
dev.off()
# Exploratory Data Analysis
# Project 1
# Clean upworkspace
rm(list=ls())
# Load data
myData <- read.table("household_power_consumption.txt",header=TRUE,sep=";",colClasses="character")
# Convert to Date/Time clsases
myData[,1] <- as.Date(myData$Date,"%d/%m/%Y")
myData[,2] <- as.Date(myData$Time,"%H/%M/%S")
# Create a subset of the data between 2007-02-01 and 2007-02-02
subData <- subset(myData, myData$Date %in% as.Date(c("2007-02-01","2007-02-02")))
# Cast the rest of the columns as numeric
subData[,3] <- as.numeric(subData[,3])
subData[,4] <- as.numeric(subData[,4])
subData[,5] <- as.numeric(subData[,5])
subData[,6] <- as.numeric(subData[,6])
subData[,7] <- as.numeric(subData[,7])
subData[,8] <- as.numeric(subData[,8])
subData[,9] <- as.numeric(subData[,9])
# Create Plot 1
hist(subData[,3], col = "Red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
# Copy to PNG file for submission
dev.copy(png,file="plot1.png")
# Close device
dev.off()
# Exploratory Data Analysis
# Project 1
# Clean upworkspace
rm(list=ls())
# Load data
myData <- read.table("household_power_consumption.txt",header=TRUE,sep=";",colClasses="character")
# Convert to Date/Time clsases
myData[,1] <- as.Date(myData$Date,"%d/%m/%Y")
# Create a subset of the data between 2007-02-01 and 2007-02-02
subData <- subset(myData, myData$Date %in% as.Date(c("2007-02-01","2007-02-02")))
subData$DateTime <- as.POSIXct(paste(subData$Date, subData$Time), format="%Y-%m-%d %H:%M:%S")
# Cast the rest of the columns as numeric
subData[,3] <- as.numeric(subData[,3])
subData[,4] <- as.numeric(subData[,4])
subData[,5] <- as.numeric(subData[,5])
subData[,6] <- as.numeric(subData[,6])
subData[,7] <- as.numeric(subData[,7])
subData[,8] <- as.numeric(subData[,8])
subData[,9] <- as.numeric(subData[,9])
# Create plot 2
plot(subData$DateTime, subData[,3], type = "l", xlab = " ", ylab = "Global Active Power (kilowatts)")
# Copy to PNG file for submission
dev.copy(png, file = "plot2.png")
# Close device
dev.off()
# Exploratory Data Analysis
# Project 1
# Clean upworkspace
rm(list=ls())
# Load data
myData <- read.table("household_power_consumption.txt",header=TRUE,sep=";",colClasses="character")
# Convert to Date/Time clsases
myData[,1] <- as.Date(myData$Date,"%d/%m/%Y")
# Create a subset of the data between 2007-02-01 and 2007-02-02
subData <- subset(myData, myData$Date %in% as.Date(c("2007-02-01","2007-02-02")))
subData$DateTime <- as.POSIXct(paste(subData$Date, subData$Time), format="%Y-%m-%d %H:%M:%S")
# Cast the rest of the columns as numeric
subData[,3] <- as.numeric(subData[,3])
subData[,4] <- as.numeric(subData[,4])
subData[,5] <- as.numeric(subData[,5])
subData[,6] <- as.numeric(subData[,6])
subData[,7] <- as.numeric(subData[,7])
subData[,8] <- as.numeric(subData[,8])
subData[,9] <- as.numeric(subData[,9])
# Create plot 3
plot(subData$DateTime, subData[,7], type = "l", xlab = " ", ylab = "Energy sub metering")
lines(subData[,10], subData[,8], col = "Red")
lines(subData[,10], subData[,9], col = "Blue")
legend(x="topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col = c("Black","Red","Blue"), lwd = 1)
# Copy to PNG file for submission
dev.copy(png,file="plot3.png")
# Close device
dev.off()
# Exploratory Data Analysis
# Project 1
# Clean upworkspace
rm(list=ls())
# Load data
myData <- read.table("household_power_consumption.txt",header=TRUE,sep=";",colClasses="character")
# Convert to Date/Time clsases
myData[,1] <- as.Date(myData$Date,"%d/%m/%Y")
# Create a subset of the data between 2007-02-01 and 2007-02-02
subData <- subset(myData, myData$Date %in% as.Date(c("2007-02-01","2007-02-02")))
subData$DateTime <- as.POSIXct(paste(subData$Date, subData$Time), format="%Y-%m-%d %H:%M:%S")
# Cast the rest of the columns as numeric
subData[,3] <- as.numeric(subData[,3])
subData[,4] <- as.numeric(subData[,4])
subData[,5] <- as.numeric(subData[,5])
subData[,6] <- as.numeric(subData[,6])
subData[,7] <- as.numeric(subData[,7])
subData[,8] <- as.numeric(subData[,8])
subData[,9] <- as.numeric(subData[,9])
# Create plot 4
# Set 2x2 grid for plots, filling across rows
par(mfrow = c(2,2))
# Plot Global Active Power
plot(subData$DateTime, subData[,3], type = "l", xlab = " ", ylab = "Global Active Power")
# Plot Voltage
plot(subData$DateTime, subData[,5], type = "l", xlab = "datetime", ylab = "Voltage")
# Plot Energy sub metering
plot(subData$DateTime, subData[,7], type = "l", xlab = " ", ylab = "Energy sub metering")
lines(subData[,10],subData[,8],col="Red")
lines(subData[,10],subData[,9],col="Blue")
legend(x = "topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col = c("Black","Red","Blue"), lwd = 1, pt.cex = 0.6, cex = 0.6, bty = "n")
# Plot Global_reactive_power
plot(subData$DateTime, subData[,4], type = "l", xlab = "datetime", ylab = "Global_reactive_power")
# Copy to PNG file for submission
dev.copy(png,file="plot4.png")
# Close device
dev.off()
